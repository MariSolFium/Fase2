package com.sample

import animales.*;
import lugares.*;
import personajes.*;
import relaciones.*;
import utilidades.*;
import java.util.*;
import profesiones.*;

//Creación de la base
rule "0.01 Creación Profesiones"
agenda-group "Acto0"
	then 
		insert(new Granjero());
		insert(new Indefinido());
		insert(new Pirateria());
end 

rule "0.02 Creación Lugares"
	then
		insert(new Granja());
		insert(new HabitacionN());
		insert(new Mar());
		insert(new BarcoPirata());	
end 

rule "0.03 Creación Animales"
	when 
		granja: Granja()
	then
		insert(new Caballo(granja));
		insert(new Cerdo(granja));
		insert(new Vaca(granja));
end

rule "0.04 Creación Personajes Acto 0"
	when 
		hab: HabitacionN()
	then
		insert(new Abuelo(hab));
		insert(new Madre(hab));
		insert(new Nieto(hab));
end

rule "0.05 Visita familiar"
  when
 	hab: HabitacionN()
    nt: Nieto(ubicacionActual == hab, estadoSalud == EstadoSalud.ENFERMO)
    ab: Abuelo(ubicacionActual == hab, estadoSalud == EstadoSalud.VIVO)
    md: Madre(ubicacionActual == hab, estadoSalud == EstadoSalud.VIVO)
    eval(nt.noTieneRelacion(ab))
    eval(ab.noTieneRelacion(md))
    eval(md.noTieneRelacion(nt))
  then
    FamiliarDe fm1 = new FamiliarDe(ab);
    FamiliarDe fm2 = new FamiliarDe(md);
    FamiliarDe fm3 = new FamiliarDe(nt);
    
    modify(nt){
    	addRelacion(fm1),
      	addRelacion(fm2);
    }
    
    modify(ab){
    	addRelacion(fm2),
    	addRelacion(fm3);
    }
    
    modify(md){
      	addRelacion(fm1),
     	addRelacion(fm3);
   	}
  	Archivo.getUnicaInstancia().addInf(md.getNombre() + " está cuidando de " 
  	+ nt.getNombre() +" que se encuentra " + nt.getEstadoSalud().getString() 
  	+ " y llega su " +ab.getNombre() + " de visita. " );
end

rule "0.06 Nieto está enfermo"
when
	hab: HabitacionN()
    nt: Nieto(ubicacionActual == hab, estadoSalud == EstadoSalud.ENFERMO)
    ab: Abuelo(ubicacionActual == hab, estadoSalud == EstadoSalud.VIVO)
    md: Madre(ubicacionActual == hab, estadoSalud == EstadoSalud.VIVO)
    eval(nt.tieneRelacion(ab))
    eval(ab.tieneRelacion(md))
    eval(md.tieneRelacion(nt))
  then
  	modify(md){
  		setUbicacionActual(null);
  	}
  	Archivo.getUnicaInstancia().addInf(md.getNombre()+" se despide y "
  	+ ab.getNombre()+ " lee un cuento a " + nt.getNombre()+". ");
end

rule "0.07 Inicio cuento"
	when
		hab: HabitacionN()
		Nieto( ubicacionActual == hab )
		Abuelo( ubicacionActual == hab )
		Madre( ubicacionActual == null )
		granja: Granja()
		granjero: Granjero()
	then
		insert(new Westley(granja, granjero));
		insert(new Buttercup(granja, granjero));
		Archivo.getUnicaInstancia().addInf("El cuento es una historia de aventuras y amor.\n");
end

rule "0.08 Relacion Conocer"
    when
        p1 : Personaje(ubicacionActual != null, estadoSalud == EstadoSalud.VIVO)
        p2 : Personaje(nombre != p1.getNombre(), ubicacionActual == p1.getUbicacionActual(), estadoSalud == EstadoSalud.VIVO)
        eval (p1.noTieneRelacion(p2))
        eval (p2.noTieneRelacion(p1))
    then

        Relacion r = new ConoceA(p2);
        Relacion r2 = new ConocidoDe(p1);
        modify(p1){
        	addRelacion(r);
        }
        modify(p2){
        	addRelacion(r2);
        } 
end

rule "0.09 Amor en la Granja"
	when
		g: Granja()
		gj: Granjero()
		wt: Westley( estadoSalud == EstadoSalud.VIVO, ubicacionActual == g, profesion == gj )
		bt: Buttercup( estadoSalud==EstadoSalud.VIVO, ubicacionActual == g, profesion == gj )
		eval(wt.esConocido(bt))
    	eval(bt.esConocido(wt))
	then
		Archivo.getUnicaInstancia().addInf(wt.getNombre() + " y " + bt.getNombre() + " son dos " 
		+ bt.getProfesion().toString()+"s. ");
		
		Relacion r1 = wt.getRelacion(bt);
		Relacion r2 = bt.getRelacion(wt);
		QuiereA q1 = new QuiereA(bt);
		QuiereA q2 = new QuiereA(wt);
		
		 modify(wt){
		 	removeRelacion(r1),
	      	addRelacion(q1),
	      	setMotivacion(Motivacion.ESTAR_CON_BUTTERCUP);
	    }
	    
	    modify(bt){
	    	removeRelacion(r2),
	    	addRelacion(q2),
	    	setMotivacion(Motivacion.ESTAR_CON_WESTLEY);
	    }
	    Archivo.getUnicaInstancia().addInf("Cuando " + bt.getNombre() + " le manda una tarea a " 
		+wt.getNombre() + ", él siempre contesta \"Como desees\", que en realidad significa \"Te amo\". "  );
end

rule "0.10 Westley se va a hacer fortuna"
    when
    	m: Mar()
   		g: Granja()
        wt: Westley( ubicacionActual == g, motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
   		pir: Pirateria()
   		inf: Indefinido()
    then
    	
    	modify(wt){
    		setMotivacion(Motivacion.GANAR_DINERO),
    		setUbicacionActual(m),
    		setProfesion(inf);
    	}
     	Archivo.getUnicaInstancia().addInf("Como " + wt.getNombre()+ " no tiene dinero se marcha a " 
     	+ m.getNombre() + " para hacer fortuna. ");
     	insert (new Pirata(m, pir));
end

rule "0.11 Westley muere"
    when
    	m: Mar()
    	p: Pirateria()
        wt: Westley(ubicacionActual == m, estadoSalud==EstadoSalud.VIVO, motivacion == Motivacion.GANAR_DINERO)
   		pir: Pirata(ubicacionActual == m, estadoSalud==EstadoSalud.VIVO, profesion == p)
    then
    	modify(wt){
    		setEstadoSalud(EstadoSalud.MUERTO);
    	}
     	Archivo.getUnicaInstancia().addInf("En " +m.getNombre()+ " " + wt.getNombre() 
     	+ " es asesinado por " + pir.getNombre()+". ");
end

rule "0.12 Buttercup odia al pirata"
    when
    	g :Granja()
    	m: Mar()
    	b: BarcoPirata()
    	Westley(estadoSalud == EstadoSalud.MUERTO, ubicacionActual == m)
    	bt: Buttercup( ubicacionActual == g, motivacion == Motivacion.ESTAR_CON_WESTLEY)
    	pr: Pirata( ubicacionActual == m )
    then
    	OdiaA od1 = new OdiaA(pr);
    	OdiadoPor od2 = new OdiadoPor(bt);
    	
	    modify(bt){
	        addRelacion(od1),
	        setMotivacion(Motivacion.DESCONOCIDA);
	    }
	 
	    modify(pr){
	    	setUbicacionActual(b),
	        addRelacion(od2);
	    }
	    Archivo.getUnicaInstancia().addInf(bt.getNombre()+ " " +bt.getRelacion(pr).toString() + 
	    " por la muerte de Westley y pierde su motivación.\n");
end


//Fin acto0

// Inicio Acto1
rule "1.01 Lugares Acto1"
agenda-group "Acto1"
	then
		insert(new BarcoMercenarios());
		insert(new Castillo());
		insert(new Espana());
		insert(new Bosque());
		insert(new AcantiladosLocura());
		insert(new CaminoMontana());
		insert(new CaminoRocoso());
end

rule"1.02 Profesiones Acto1"
	then
		insert(new Mercenario());
		insert(new Gobernante());
		insert(new Visir());
		insert(new Herrero());
		insert(new Desempleado());
end

rule "1.03 Creación de Personajes Acto1"
	when 
		mercenario: Mercenario()
		gobernante: Gobernante()
		visir: Visir()
		castillo: Castillo()
		esp : Espana()
		herrero: Herrero()
		bosque: Bosque()
		mar: Mar()
	then
		insert(new Vizzini(bosque, mercenario ));
		insert(new Inigo(bosque, mercenario));
		insert(new Fezzik(bosque, mercenario));
		insert(new Rey(castillo, gobernante));
		insert(new Principe(castillo, gobernante));
		insert(new Conde(castillo, visir));
		insert(new PadreInigo(esp, herrero));
		insert(new AnguilaChillona(mar));
end

rule "1.04 El Rey"
	when
		g: Gobernante()
		r: Rey(profesion == g)
		eval(r.noTieneTitulo())
	then
		modify(r){
			setTit(TituloNobiliario.REY);
		}
end

rule "1.05 El Príncipe"
	when
		g: Gobernante()
		p: Principe(profesion == g)
		eval(p.noTieneTitulo())
	then
		modify(p){
			setTit(TituloNobiliario.PRINCIPE);
		}
		
end
rule "1.06 El Conde"
	when
		v: Visir()
		c: Conde( profesion==v )
		eval(c.noTieneTitulo())
	then
		modify(c){
			setTit(TituloNobiliario.CONDE);
		}
end

rule "1.07 Rey y Príncipe son familia"
  when
  	g: Gobernante()
    pr: Principe(profesion == g)
    ry: Rey(profesion == g)
    eval(pr.esConocido(ry))
  then
  	Relacion r1 = pr.getRelacion(ry);
  	Relacion r2 = ry.getRelacion(pr);
    FamiliarDe fm1 = new FamiliarDe(ry);
    FamiliarDe fm2 = new FamiliarDe(pr);
    
    modify(pr){
    	removeRelacion(r1),
      	addRelacion(fm1);
    }
    modify(ry){
    	removeRelacion(r2),
      	addRelacion(fm2);
    }
end

rule "1.08 Principe y Conde amigos"
  when
  	g: Gobernante()
  	v: Visir()
    pr: Principe( profesion == g)
    cd: Conde(profesion ==v )
    eval(pr.esConocido(cd))
  then
  	Relacion r1 = pr.getRelacion(cd);
  	Relacion r2 = cd.getRelacion(pr);
    Relacion am1 = new AmigoDe(cd);
    Relacion am2 = new AmigoDe(pr);
    
    modify(pr){
    	removeRelacion(r1),
      	addRelacion(am1);
    }
    
    modify(cd){
    	removeRelacion(r2),
      	addRelacion(am2),
      	setMotivacion(Motivacion.SERVIR_PRINCIPE);
    }
end

rule "1.09 El príncipe quiere a Buttercup"
  when
    pr: Principe( estadoSalud == EstadoSalud.VIVO )
    bt: Buttercup( estadoSalud == EstadoSalud.VIVO )
    eval(pr.noTieneRelacion(bt))
  then
    QuiereA q1 = new QuiereA(bt);
    modify(pr){
          addRelacion(q1),
          setMotivacion(Motivacion.ESTAR_CON_BUTTERCUP);
    }
    Archivo.getUnicaInstancia().addInf(pr.getNombre() + " quiere a " + bt.getNombre()+ ". ");
end

rule "1.10 Buttercup prometida del príncipe"
  when
  	m: Mar()
    pr: Principe(motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
    bt: Buttercup( estadoSalud == EstadoSalud.VIVO )
    Westley( estadoSalud == EstadoSalud.MUERTO, ubicacionActual == m)
    c: Castillo()
    eval(bt.noTieneRelacion(pr))
  then
    Relacion p1 = new PrometidaDe(pr);
    Relacion p2 = new PrometidoDe(bt);
    modify(bt){
          addRelacion(p1),
          setUbicacionActual(c);
    }
    modify(pr){
          addRelacion(p2);
    }
    
    Archivo.getUnicaInstancia().addInf("Al pasar cinco años " + pr.getNombre() + " y " +
    bt.getNombre() + " se prometen y se anuncia la boda. ");
end

rule "1.11 Buttercup sale a pasear"
	when
		b: Bosque()
		c: Castillo()
		bt: Buttercup(ubicacionActual == c)
		we: Westley(estadoSalud == EstadoSalud.MUERTO)
		Principe(ubicacionActual == c, motivacion == Motivacion.ESTAR_CON_BUTTERCUP )
	then
		modify(bt){
			setUbicacionActual(b);
		}
	    Archivo.getUnicaInstancia().addInf(bt.getNombre()+ " sale a pasear por " 
	    + b.getNombre()+". ");
end			

rule "1.12 Secuestro Buttercup"
	when
		b: Bosque()
		mar: Mar()
		princesa: Buttercup(ubicacionActual == b)
		mer: Mercenario()
		v: Vizzini(ubicacionActual == b, profesion == mer, estadoSalud == EstadoSalud.VIVO)
		i: Inigo(ubicacionActual == b, profesion == mer, estadoSalud == EstadoSalud.VIVO)
		f: Fezzik(ubicacionActual == b, profesion == mer, estadoSalud == EstadoSalud.VIVO)
	then
		modify(i){
			setUbicacionActual(mar),
			setMotivacion(Motivacion.SECUESTRAR_PRINCESA);
		}
		modify(f){
			setUbicacionActual(mar),
			setMotivacion(Motivacion.SECUESTRAR_PRINCESA);
		}
		modify(v){
			setUbicacionActual(mar),
			setMotivacion(Motivacion.SECUESTRAR_PRINCESA);
		}
		modify(princesa){
			setUbicacionActual(mar);
		}
		Archivo.getUnicaInstancia().addInf(v.getNombre() + ", " + i.getNombre() + " y " 
		+ f.getNombre() + " secuestran a "+ princesa.getNombre()+". ");
end

rule "1.13 Huida por el mar"
	when
		mar: Mar()
		princesa: Buttercup(ubicacionActual == mar)
		mer: Mercenario()
		v: Vizzini(ubicacionActual == mar, profesion == mer, motivacion == Motivacion.SECUESTRAR_PRINCESA)
		i: Inigo(ubicacionActual == mar, profesion == mer)
		f: Fezzik(ubicacionActual == mar, profesion == mer)
		bm: BarcoMercenarios()
	then
		modify(v){
			setMotivacion(Motivacion.DECLARAR_GUERRA),
			setUbicacionActual(bm);
		}
		modify(princesa){
			setUbicacionActual(bm);
		}
		modify(i){
			setUbicacionActual(bm);
		}
		modify(f){
			setMotivacion(Motivacion.TENER_TRABAJO),
			setUbicacionActual(bm);
		}
		Archivo.getUnicaInstancia().addInf("Los mercenarios se llevan a "+princesa.getNombre()+
		" por " +mar.getNombre()+" para llegar a la frontera de Guilder. " +v.getNombre() +
		" quiere provocar que Florin declare la guerra a Guilder. ");
		
end

rule "1.14 Anguila ataca a buttercup"
	when 
		m: Mar()
		bm: BarcoMercenarios()
		bt: Buttercup(ubicacionActual == bm )
		a: AnguilaChillona(ubicacionActual == m)
	then 
		modify(bt){
			setEstadoSalud(EstadoSalud.EN_PELIGRO);
		}
		
		Archivo.getUnicaInstancia().addInf(bt.getNombre() + 
		" intenta escapar y en el agua es atacada por una " + a.getNombre() 
		+ ", ahora ella está " + bt.getEstadoSalud().getString() +". ");
end

rule "1.15 Fezzik salva a Buttercup"
	when 
		m: Mar()
		bm: BarcoMercenarios()
		bt: Buttercup( estadoSalud == EstadoSalud.EN_PELIGRO, ubicacionActual == bm )
		fz: Fezzik( ubicacionActual == bm )
		a: AnguilaChillona( ubicacionActual== m)
	then
		modify(bt){
			setEstadoSalud(EstadoSalud.VIVO);
		}
		modify(a){
			setEstadoSalud(EstadoSalud.MUERTO);
		}		
		Archivo.getUnicaInstancia().addInf(fz.getNombre()+" salva a " + bt.getNombre() + 
		" y "+ a.getNombre() + " muere. ");		
end

rule "1.16 Llegada a los acantilados"
	when
		bm: BarcoMercenarios()
		b:BarcoPirata()
		acantilados: AcantiladosLocura(  )
		AnguilaChillona(estadoSalud == EstadoSalud.MUERTO)
		v: Vizzini( ubicacionActual == bm)
		bt: Buttercup(ubicacionActual == bm)
		f: Fezzik( ubicacionActual == bm)
		i: Inigo( ubicacionActual == bm)
		p: Pirata( ubicacionActual == b )
	then
		modify(i){
			setUbicacionActual(acantilados)
		}
		modify(f){
			setUbicacionActual(acantilados)
		}
		modify(bt){
			setUbicacionActual(acantilados)
		}
		modify(v){
			setUbicacionActual(acantilados)		
		}
		modify(p){
			setMotivacion(Motivacion.SECUESTRAR_PRINCESA)
		}
		Archivo.getUnicaInstancia().addInf(v.getNombre() + ", " + f.getNombre() + ", " 
		+ i.getNombre() + " y " + bt.getNombre() + " llegan a " + acantilados.getNombre()+". ");
		Archivo.getUnicaInstancia().addInf("Aparece "+ p.getNombre() + " que quiere " 
		+ p.getMotivacion().getString()+". ");
end

rule "1.17 Pirata llega a los acantilados"
	when
		b: BarcoPirata()
		cr: CaminoRocoso()
		ac: AcantiladosLocura()
		p: Pirata( ubicacionActual == b, estadoSalud == EstadoSalud.VIVO)
		i: Inigo( ubicacionActual == ac )
		v: Vizzini(ubicacionActual == ac, estadoSalud == EstadoSalud.VIVO)
		bt: Buttercup(ubicacionActual == ac, estadoSalud == EstadoSalud.VIVO)
		f: Fezzik(ubicacionActual == ac, estadoSalud == EstadoSalud.VIVO)
	then
		EnemigoDe e1 = new EnemigoDe(p);
		EnemigoDe e2 = new EnemigoDe(i);
		EnemigoDe e3 = new EnemigoDe(f);
		EnemigoDe e4 = new EnemigoDe(v);
		modify(p){
			addRelacion(e2),
			addRelacion(e3),
			addRelacion(e4),
			setUbicacionActual(ac);
		}
		modify(bt){
			setUbicacionActual(cr);
		}
		modify(i){
			addRelacion(e1);
		}
		modify(v){
			addRelacion(e1),
			setUbicacionActual(cr);
		}
		modify(f){
			addRelacion(e1),
			setUbicacionActual(cr);
		}
		Archivo.getUnicaInstancia().addInf(v.getNombre() + ", " + f.getNombre() + " y " 
		+ bt.getNombre() + " siguen hacia " + cr.getNombre() +". ");
		Archivo.getUnicaInstancia().addInf(i.getNombre() + " se queda para enfrentar a "
		+ p.getNombre() +". ");
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " llega a " + ac.getNombre()+". ");
end

rule "1.18 Historia Domingo Montoya"
	when
		ac: AcantiladosLocura()
		h: Herrero(  )
		p: Pirata( ubicacionActual == ac )
		i: Inigo( ubicacionActual == ac, motivacion == Motivacion.SECUESTRAR_PRINCESA)
		pi: PadreInigo(estadoSalud == EstadoSalud.MUERTO, profesion == h)
		eval(i.noTieneRelacion(pi))
	then
		Relacion fm1 = new FamiliarDe(pi);
	    Relacion fm2 = new FamiliarDe(i);
	   
	    modify(i){
	    	setMotivacion(Motivacion.GANAR_DINERO),
	     	addRelacion(fm1);
	    }
	    modify(pi){
	      	addRelacion(fm2);
	    }
		Archivo.getUnicaInstancia().addInf(pi.getNombre() +" fue asesinado y su hijo " 
		+ i.getNombre() + " busca al hombre que tiene seis dedos para vengarse. ");
end

rule "1.19 Pirata vence a Iñigo"
	when
		ac: AcantiladosLocura()
		cr: CaminoRocoso()
		cm : CaminoMontana()
		mercenario: Mercenario()
		v: Vizzini(ubicacionActual == cr)
		bt: Buttercup(ubicacionActual == cr)
		p: Pirata(ubicacionActual == ac)
		i: Inigo(ubicacionActual == ac, profesion == mercenario, estadoSalud == EstadoSalud.VIVO)
	then
		modify(bt){
			setUbicacionActual(cm);
		}
		modify(v){
			setUbicacionActual(cm);
		}
		modify(i){
			setEstadoSalud(EstadoSalud.INCONSCIENTE)
		}
		modify(p){
			setUbicacionActual(cr)
		}
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " vence a " + i.getNombre() 
		+" y sigue la persecución. ");
		
end 

rule "1.20 Pirata vence a Fezzik"
	when
		cr: CaminoRocoso()
		cm : CaminoMontana()
		ac: AcantiladosLocura()
		des: Desempleado()
		p: Pirata(ubicacionActual == cr)
		f: Fezzik(ubicacionActual == cr, motivacion == Motivacion.TENER_TRABAJO)
		i: Inigo(estadoSalud == EstadoSalud.INCONSCIENTE, ubicacionActual == ac)
	then
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " llega a "+ cr.getNombre() +
		" y se enfrenta a " + f.getNombre() +". ");
		modify(f){
			setEstadoSalud(EstadoSalud.INCONSCIENTE)
		}
		modify(i){
			setProfesion(des),
			setUbicacionActual(null);
		}
		modify(p){
			setUbicacionActual(cm);
		}
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " vence a " + f.getNombre()+
		" y continúa hacia " + cm.getNombre() +". ");
end

rule "1.21 Príncipe llega a los acantilados"
	when
		ac: AcantiladosLocura()
		cr: CaminoRocoso()
		des: Desempleado()
		f: Fezzik(ubicacionActual == cr, estadoSalud == EstadoSalud.INCONSCIENTE)
		pr: Principe(estadoSalud == EstadoSalud.VIVO, motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
		cd: Conde(estadoSalud == EstadoSalud.VIVO, motivacion == Motivacion.SERVIR_PRINCIPE)
	then
		modify(pr){
			setUbicacionActual(ac),
			setMotivacion(Motivacion.SALVAR_BUTTERCUP);
		}
		modify(cd){
			setUbicacionActual(ac);
		}
		modify(f){
			setProfesion(des),
			setUbicacionActual(null);
		}
		Archivo.getUnicaInstancia().addInf(pr.getNombre() +" y " + cd.getNombre()+ 
		" llegan a los acantilados para "+pr.getMotivacion().getString() +". ");
end 

rule "1.22 Muere Vizzini"
	when 
		cm : CaminoMontana()
		p: Pirata(ubicacionActual == cm, estadoSalud == EstadoSalud.VIVO)
		v: Vizzini(ubicacionActual == cm, estadoSalud == EstadoSalud.VIVO)
		Buttercup(ubicacionActual == cm)
		Fezzik(estadoSalud == EstadoSalud.INCONSCIENTE)
	then
		 Archivo.getUnicaInstancia().addInf(p.getNombre()+" alcanza a " + v.getNombre() +
		 " y se enfrentan a un duelo de lógica. ");
		modify(v){
			setEstadoSalud(EstadoSalud.MUERTO);
		}
		Archivo.getUnicaInstancia().addInf(v.getNombre()+ " termina " + 
		v.getEstadoSalud().getString() + " por el venero. \n");
end
